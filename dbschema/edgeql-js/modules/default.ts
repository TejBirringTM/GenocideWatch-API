// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $ContentType = {
  "Image": $.$expr_Literal<$ContentType>;
  "Video": $.$expr_Literal<$ContentType>;
  "Audio": $.$expr_Literal<$ContentType>;
  "Document": $.$expr_Literal<$ContentType>;
  "Dataset": $.$expr_Literal<$ContentType>;
} & $.EnumType<"default::ContentType", ["Image", "Video", "Audio", "Document", "Dataset"]>;
const ContentType: $ContentType = $.makeType<$ContentType>(_.spec, "a2da001b-7b1e-11ee-9345-0d744e8d1976", _.syntax.literal);

export type $EvidenceType = {
  "DirectEvidencePhotographFootage": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceFilmFootage": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceAudioFootage": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceMemo": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceEmail": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceSocialMediaPost": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceWebsiteContent": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceInterview": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceWitnessStatement": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceVlog": $.$expr_Literal<$EvidenceType>;
  "DirectEvidenceOther": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceReport": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceResearchPaper": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceScientificStudy": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceSurveyData": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceExpertTestimony": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceFinancialRecord": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceMedicalRecord": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceGovernmentReport": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidencePublicRecord": $.$expr_Literal<$EvidenceType>;
  "IndirectEvidenceOther": $.$expr_Literal<$EvidenceType>;
} & $.EnumType<"default::EvidenceType", ["DirectEvidencePhotographFootage", "DirectEvidenceFilmFootage", "DirectEvidenceAudioFootage", "DirectEvidenceMemo", "DirectEvidenceEmail", "DirectEvidenceSocialMediaPost", "DirectEvidenceWebsiteContent", "DirectEvidenceInterview", "DirectEvidenceWitnessStatement", "DirectEvidenceVlog", "DirectEvidenceOther", "IndirectEvidenceReport", "IndirectEvidenceResearchPaper", "IndirectEvidenceScientificStudy", "IndirectEvidenceSurveyData", "IndirectEvidenceExpertTestimony", "IndirectEvidenceFinancialRecord", "IndirectEvidenceMedicalRecord", "IndirectEvidenceGovernmentReport", "IndirectEvidencePublicRecord", "IndirectEvidenceOther"]>;
const EvidenceType: $EvidenceType = $.makeType<$EvidenceType>(_.spec, "a2da2ca2-7b1e-11ee-87fe-a5191e891757", _.syntax.literal);

export type $BaseλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "tags": $.PropertyDesc<$.ArrayType<_std.$str>, $.Cardinality.AtMostOne, false, false, false, false>;
  "notes": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $Base = $.ObjectType<"default::Base", $BaseλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Base = $.makeType<$Base>(_.spec, "a2d4faf4-7b1e-11ee-9fca-09f428238db3", _.syntax.literal);

const Base: $.$expr_PathNode<$.TypeSet<$Base, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Base, $.Cardinality.Many), null);

export type $EvidenceλShape = $.typeutil.flatten<$BaseλShape & {
  "contentHash": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, true, false>;
  "contentType": $.PropertyDesc<$ContentType, $.Cardinality.One, false, false, true, false>;
  "evidenceType": $.PropertyDesc<$EvidenceType, $.Cardinality.One, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "authors": $.LinkDesc<$Individual, $.Cardinality.Many, {}, false, false,  false, false>;
  "context": $.LinkDesc<$GenocideContext, $.Cardinality.One, {}, false, false,  false, false>;
  "individualPublishers": $.LinkDesc<$Individual, $.Cardinality.Many, {}, false, false,  false, false>;
  "organisationalPublishers": $.LinkDesc<$Organisation, $.Cardinality.Many, {}, false, false,  false, false>;
  "contentURL": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, true, false>;
  "dateTime": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "geoCoord": $.PropertyDesc<$.NamedTupleType<{lat: _std.$float32, lng: _std.$float32}>, $.Cardinality.AtMostOne, false, false, false, false>;
  "<published[is Individual]": $.LinkDesc<$Individual, $.Cardinality.Many, {}, false, false,  false, false>;
  "<authored[is Individual]": $.LinkDesc<$Individual, $.Cardinality.Many, {}, false, false,  false, false>;
  "<testimonies[is GenocideContext]": $.LinkDesc<$GenocideContext, $.Cardinality.Many, {}, false, false,  false, false>;
  "<published[is Organisation]": $.LinkDesc<$Organisation, $.Cardinality.Many, {}, false, false,  false, false>;
  "<authored": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<published": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<testimonies": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Evidence = $.ObjectType<"default::Evidence", $EvidenceλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Evidence = $.makeType<$Evidence>(_.spec, "a2da6195-7b1e-11ee-b8cb-19ddc925c450", _.syntax.literal);

const Evidence: $.$expr_PathNode<$.TypeSet<$Evidence, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Evidence, $.Cardinality.Many), null);

export type $GenocideContextλShape = $.typeutil.flatten<$BaseλShape & {
  "slug": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "testimonies": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, true,  false, false>;
  "mapDefaultGeoCoord": $.PropertyDesc<$.NamedTupleType<{lat: _std.$float32, lng: _std.$float32}>, $.Cardinality.AtMostOne, false, false, false, false>;
  "mapDefaultZoom": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<context[is Evidence]": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, false,  false, false>;
  "<context": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $GenocideContext = $.ObjectType<"default::GenocideContext", $GenocideContextλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $GenocideContext = $.makeType<$GenocideContext>(_.spec, "da089f16-7c09-11ee-9a6b-6f65ccba15c5", _.syntax.literal);

const GenocideContext: $.$expr_PathNode<$.TypeSet<$GenocideContext, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GenocideContext, $.Cardinality.Many), null);

export type $OnlinePresenceλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "email": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "facebook": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "instagram": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "linkedIn": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "locals": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "patreon": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "rumble": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "website": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "twitter": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $OnlinePresence = $.ObjectType<"default::OnlinePresence", $OnlinePresenceλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $OnlinePresence = $.makeType<$OnlinePresence>(_.spec, "a2e2aecb-7b1e-11ee-b349-d714da898ab3", _.syntax.literal);

const OnlinePresence: $.$expr_PathNode<$.TypeSet<$OnlinePresence, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($OnlinePresence, $.Cardinality.Many), null);

export type $IndividualλShape = $.typeutil.flatten<$BaseλShape & $OnlinePresenceλShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "published": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, true,  false, false>;
  "authored": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, true,  false, false>;
  "<authors[is Evidence]": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, false,  false, false>;
  "<individualPublishers[is Evidence]": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, false,  false, false>;
  "<authors": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<individualPublishers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Individual = $.ObjectType<"default::Individual", $IndividualλShape, null, [
  ...$Base['__exclusives__'],
  ...$OnlinePresence['__exclusives__'],
]>;
const $Individual = $.makeType<$Individual>(_.spec, "a2e9a4e8-7b1e-11ee-aec1-19749aa9b84a", _.syntax.literal);

const Individual: $.$expr_PathNode<$.TypeSet<$Individual, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Individual, $.Cardinality.Many), null);

export type $OrganisationλShape = $.typeutil.flatten<$BaseλShape & $OnlinePresenceλShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "published": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, true,  false, false>;
  "<organisationalPublishers[is Evidence]": $.LinkDesc<$Evidence, $.Cardinality.Many, {}, false, false,  false, false>;
  "<organisationalPublishers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Organisation = $.ObjectType<"default::Organisation", $OrganisationλShape, null, [
  ...$Base['__exclusives__'],
  ...$OnlinePresence['__exclusives__'],
]>;
const $Organisation = $.makeType<$Organisation>(_.spec, "a2f2e186-7b1e-11ee-a1ff-65cc2b57635d", _.syntax.literal);

const Organisation: $.$expr_PathNode<$.TypeSet<$Organisation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Organisation, $.Cardinality.Many), null);



export { ContentType, EvidenceType, $Base, Base, $Evidence, Evidence, $GenocideContext, GenocideContext, $OnlinePresence, OnlinePresence, $Individual, Individual, $Organisation, Organisation };

type __defaultExports = {
  "ContentType": typeof ContentType;
  "EvidenceType": typeof EvidenceType;
  "Base": typeof Base;
  "Evidence": typeof Evidence;
  "GenocideContext": typeof GenocideContext;
  "OnlinePresence": typeof OnlinePresence;
  "Individual": typeof Individual;
  "Organisation": typeof Organisation
};
const __defaultExports: __defaultExports = {
  "ContentType": ContentType,
  "EvidenceType": EvidenceType,
  "Base": Base,
  "Evidence": Evidence,
  "GenocideContext": GenocideContext,
  "OnlinePresence": OnlinePresence,
  "Individual": Individual,
  "Organisation": Organisation
};
export default __defaultExports;
